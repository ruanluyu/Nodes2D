package main;

class NodeLine extends NObject {
	private NodePoint inP, outP;

	/////////////// initialObject
	@Override
	protected void initializeObject() {
		CLASSNAME = "NodeLine";
		idAddable = true;
	}

	///////////////
	NodeLine(NodePoint p1, NodePoint p2) {
		super();
		if ((!p1.isInOutMode()) && (!p2.isInOutMode())) {
			if (p1.isInput() && p2.isOutput()) {
				inP = p1;
				outP = p2;
			} else if (p1.isOutput() && p2.isInput()) {
				inP = p2;
				outP = p1;
			} else {
				try {
					throw new NodeException(0,
							"Connection between NodePoint" + p1.getTitle() + " and NodePoint " + p1.getTitle() + " .");
				} catch (NodeException e) {
					e.println();
				}
			}
		} else if (!((p1.isInOutMode()) && (p2.isInOutMode()))) {
			if(p1.isInOutMode()){
				if(p1.isInput()){
					outP = p1;
					inP = p2;
				}else{
					inP = p1;
					outP = p2;
				}
			}
		}else{
			println("Error : Failed in building line");//TODO Error
		}

	}

	NodePoint getInPoint() {
		return inP;
	}

	NodePoint getOutPoint() {
		return outP;
	}
}